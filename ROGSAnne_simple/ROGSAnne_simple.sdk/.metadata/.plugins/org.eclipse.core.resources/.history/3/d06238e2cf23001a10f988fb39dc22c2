/*
 * RNG.cpp
 *
 *  Created on: Dec 21, 2019
 *      Author: Mathi
 */

#include "RNG.h"
#include <limits>

static unsigned int getRandomUnsignedInt(){
	unsigned int b;

	   b  = ((z1 << 6) ^ z1) >> 13;
	   z1 = ((z1 & 4294967294U) << 18) ^ b;
	   b  = ((z2 << 2) ^ z2) >> 27;
	   z2 = ((z2 & 4294967288U) << 2) ^ b;
	   b  = ((z3 << 13) ^ z3) >> 21;
	   z3 = ((z3 & 4294967280U) << 7) ^ b;
	   b  = ((z4 << 3) ^ z4) >> 12;
	   z4 = ((z4 & 4294967168U) << 13) ^ b;

	   return (z1 ^ z2 ^ z3 ^ z4);
}

float getRandomFloat(float min, float max){
	unsigned int OldMax, OldMin, OldValue, OldRange;
	float NewRange, NewValue = 0;
	OldMax = std::numeric_limits<unsigned int>::max();
	OldMin = 0;
	OldValue = getRandomUnsignedInt();

	OldRange = (OldMax - OldMin);
	NewRange = (max - min);
	NewValue = (((float)(OldValue - OldMin) * NewRange) / OldRange) + min;

	return NewValue;
};

unsigned int getRandomUnsignedIntInRange(unsigned int min, unsigned int max){
	unsigned int r = getRandomUnsignedInt();
	unsigned int range = max - min;
	return r % range + min;
}

