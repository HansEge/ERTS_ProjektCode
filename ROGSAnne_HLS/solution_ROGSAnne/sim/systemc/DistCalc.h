// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _DistCalc_HH_
#define _DistCalc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "DistCalc_DistCalcThread.h"

namespace ap_rtl {

struct DistCalc : public sc_module {
    // Port declarations 12
    sc_in_clk clk;
    sc_in< sc_logic > reset;
    sc_out< sc_logic > busy;
    sc_in< sc_lv<32> > numberOfPoints;
    sc_in< sc_logic > ready;
    sc_in< sc_lv<32> > x_dout;
    sc_in< sc_logic > x_empty_n;
    sc_out< sc_logic > x_read;
    sc_in< sc_lv<32> > y_dout;
    sc_in< sc_logic > y_empty_n;
    sc_out< sc_logic > y_read;
    sc_out< sc_lv<32> > outputDist;


    // Module declarations
    DistCalc(sc_module_name name);
    SC_HAS_PROCESS(DistCalc);

    ~DistCalc();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    DistCalc_DistCalcThread* grp_DistCalc_DistCalcThread_fu_70;
    sc_signal< sc_logic > grp_DistCalc_DistCalcThread_fu_70_busy;
    sc_signal< sc_logic > grp_DistCalc_DistCalcThread_fu_70_busy_ap_vld;
    sc_signal< sc_logic > grp_DistCalc_DistCalcThread_fu_70_x_read;
    sc_signal< sc_logic > grp_DistCalc_DistCalcThread_fu_70_y_read;
    sc_signal< sc_lv<32> > grp_DistCalc_DistCalcThread_fu_70_outputDist;
    sc_signal< sc_logic > grp_DistCalc_DistCalcThread_fu_70_outputDist_ap_vld;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_busy();
    void thread_outputDist();
    void thread_ap_CS_fsm();
    void thread_ap_CS_fsm_state2();
    void thread_x_read();
    void thread_y_read();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
