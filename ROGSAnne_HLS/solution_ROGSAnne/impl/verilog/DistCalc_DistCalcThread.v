// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DistCalc_DistCalcThread (
        ap_clk,
        ap_rst,
        numberOfPoints,
        ready,
        x1_dout,
        x1_empty_n,
        x1_read,
        y2_dout,
        y2_empty_n,
        y2_read,
        outputDist,
        outputDist_ap_vld
);

parameter    ap_ST_fsm_state2 = 77'd2;
parameter    ap_ST_fsm_state3 = 77'd4;
parameter    ap_ST_fsm_state4 = 77'd8;
parameter    ap_ST_fsm_state5 = 77'd16;
parameter    ap_ST_fsm_state6 = 77'd32;
parameter    ap_ST_fsm_state7 = 77'd64;
parameter    ap_ST_fsm_state8 = 77'd128;
parameter    ap_ST_fsm_state9 = 77'd256;
parameter    ap_ST_fsm_state10 = 77'd512;
parameter    ap_ST_fsm_state11 = 77'd1024;
parameter    ap_ST_fsm_state12 = 77'd2048;
parameter    ap_ST_fsm_state13 = 77'd4096;
parameter    ap_ST_fsm_state14 = 77'd8192;
parameter    ap_ST_fsm_state15 = 77'd16384;
parameter    ap_ST_fsm_state16 = 77'd32768;
parameter    ap_ST_fsm_state17 = 77'd65536;
parameter    ap_ST_fsm_state18 = 77'd131072;
parameter    ap_ST_fsm_state19 = 77'd262144;
parameter    ap_ST_fsm_state20 = 77'd524288;
parameter    ap_ST_fsm_state21 = 77'd1048576;
parameter    ap_ST_fsm_state22 = 77'd2097152;
parameter    ap_ST_fsm_state23 = 77'd4194304;
parameter    ap_ST_fsm_state24 = 77'd8388608;
parameter    ap_ST_fsm_state25 = 77'd16777216;
parameter    ap_ST_fsm_state26 = 77'd33554432;
parameter    ap_ST_fsm_state27 = 77'd67108864;
parameter    ap_ST_fsm_state28 = 77'd134217728;
parameter    ap_ST_fsm_state29 = 77'd268435456;
parameter    ap_ST_fsm_state30 = 77'd536870912;
parameter    ap_ST_fsm_state31 = 77'd1073741824;
parameter    ap_ST_fsm_state32 = 77'd2147483648;
parameter    ap_ST_fsm_state33 = 77'd4294967296;
parameter    ap_ST_fsm_state34 = 77'd8589934592;
parameter    ap_ST_fsm_state35 = 77'd17179869184;
parameter    ap_ST_fsm_state36 = 77'd34359738368;
parameter    ap_ST_fsm_state37 = 77'd68719476736;
parameter    ap_ST_fsm_state38 = 77'd137438953472;
parameter    ap_ST_fsm_state39 = 77'd274877906944;
parameter    ap_ST_fsm_state40 = 77'd549755813888;
parameter    ap_ST_fsm_state41 = 77'd1099511627776;
parameter    ap_ST_fsm_state42 = 77'd2199023255552;
parameter    ap_ST_fsm_state43 = 77'd4398046511104;
parameter    ap_ST_fsm_state44 = 77'd8796093022208;
parameter    ap_ST_fsm_state45 = 77'd17592186044416;
parameter    ap_ST_fsm_state46 = 77'd35184372088832;
parameter    ap_ST_fsm_state47 = 77'd70368744177664;
parameter    ap_ST_fsm_state48 = 77'd140737488355328;
parameter    ap_ST_fsm_state49 = 77'd281474976710656;
parameter    ap_ST_fsm_state50 = 77'd562949953421312;
parameter    ap_ST_fsm_state51 = 77'd1125899906842624;
parameter    ap_ST_fsm_state52 = 77'd2251799813685248;
parameter    ap_ST_fsm_state53 = 77'd4503599627370496;
parameter    ap_ST_fsm_state54 = 77'd9007199254740992;
parameter    ap_ST_fsm_state55 = 77'd18014398509481984;
parameter    ap_ST_fsm_state56 = 77'd36028797018963968;
parameter    ap_ST_fsm_state57 = 77'd72057594037927936;
parameter    ap_ST_fsm_state58 = 77'd144115188075855872;
parameter    ap_ST_fsm_state59 = 77'd288230376151711744;
parameter    ap_ST_fsm_state60 = 77'd576460752303423488;
parameter    ap_ST_fsm_state61 = 77'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 77'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 77'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 77'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 77'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 77'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 77'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 77'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 77'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 77'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 77'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 77'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 77'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 77'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 77'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 77'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 77'd75557863725914323419136;

input   ap_clk;
input   ap_rst;
input  [31:0] numberOfPoints;
input   ready;
input  [31:0] x1_dout;
input   x1_empty_n;
output   x1_read;
input  [31:0] y2_dout;
input   y2_empty_n;
output   y2_read;
output  [31:0] outputDist;
output   outputDist_ap_vld;

reg x1_read;
reg y2_read;
reg outputDist_ap_vld;

reg    x1_blk_n;
(* fsm_encoding = "none" *) reg   [76:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_read_fu_88_p2;
wire    ap_CS_fsm_state3;
reg   [0:0] tmp_reg_213;
wire   [0:0] tmp_4_fu_178_p2;
reg    y2_blk_n;
reg    ap_block_state2;
reg   [31:0] tmp_15_reg_217;
reg   [31:0] tmp_18_reg_235;
reg    ap_predicate_op115_read_state3;
reg    ap_block_state3;
reg   [31:0] tmp_19_reg_240;
wire  signed [31:0] tmp_7_fu_183_p2;
reg  signed [31:0] tmp_7_reg_245;
wire  signed [31:0] tmp_9_fu_189_p2;
reg  signed [31:0] tmp_9_reg_251;
wire   [31:0] i_1_fu_195_p2;
reg   [31:0] i_1_reg_257;
wire   [31:0] grp_fu_201_p2;
reg   [31:0] tmp_8_reg_262;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_fu_205_p2;
reg   [31:0] tmp_s_reg_267;
wire   [31:0] tmp_1_fu_209_p2;
reg   [31:0] tmp_1_reg_272;
wire    ap_CS_fsm_state6;
wire   [63:0] grp_fu_170_p1;
reg   [63:0] tmp_2_reg_277;
wire    ap_CS_fsm_state12;
wire   [63:0] grp_fu_173_p2;
reg   [63:0] tmp_3_reg_282;
wire    ap_CS_fsm_state69;
wire   [63:0] grp_fu_165_p2;
wire    ap_CS_fsm_state77;
reg   [63:0] totalDist_reg_119;
reg   [31:0] x_reg_131;
reg   [31:0] y_reg_140;
reg   [31:0] i_reg_149;
wire   [31:0] v_fu_160_p1;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state4;
reg   [76:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 77'd2;
end

DistCalc_fptrunc_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
DistCalc_fptrunc_bkb_U0(
    .din0(totalDist_reg_119),
    .dout(v_fu_160_p1)
);

DistCalc_dadd_64ncud #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
DistCalc_dadd_64ncud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(totalDist_reg_119),
    .din1(tmp_3_reg_282),
    .ce(1'b1),
    .dout(grp_fu_165_p2)
);

DistCalc_sitodp_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
DistCalc_sitodp_3dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_reg_272),
    .ce(1'b1),
    .dout(grp_fu_170_p1)
);

DistCalc_dsqrt_64eOg #(
    .ID( 1 ),
    .NUM_STAGE( 57 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
DistCalc_dsqrt_64eOg_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(tmp_2_reg_277),
    .ce(1'b1),
    .dout(grp_fu_173_p2)
);

DistCalc_mul_32s_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DistCalc_mul_32s_fYi_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_7_reg_245),
    .din1(tmp_7_reg_245),
    .ce(1'b1),
    .dout(grp_fu_201_p2)
);

DistCalc_mul_32s_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DistCalc_mul_32s_fYi_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_reg_251),
    .din1(tmp_9_reg_251),
    .ce(1'b1),
    .dout(grp_fu_205_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b0) begin
        ap_CS_fsm <= ap_ST_fsm_state2;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        i_reg_149 <= i_1_reg_257;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n))))) begin
        i_reg_149 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        totalDist_reg_119 <= grp_fu_165_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n))))) begin
        totalDist_reg_119 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        x_reg_131 <= tmp_18_reg_235;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n))))) begin
        x_reg_131 <= x1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        y_reg_140 <= tmp_19_reg_240;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n))))) begin
        y_reg_140 <= y2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_predicate_op115_read_state3) & ~(((1'b0 == x1_empty_n) & (1'b1 == ap_predicate_op115_read_state3)) | ((1'b0 == y2_empty_n) & (1'b1 == ap_predicate_op115_read_state3))))) begin
        i_1_reg_257 <= i_1_fu_195_p2;
        tmp_18_reg_235 <= x1_dout;
        tmp_19_reg_240 <= y2_dout;
        tmp_7_reg_245 <= tmp_7_fu_183_p2;
        tmp_9_reg_251 <= tmp_9_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n))))) begin
        tmp_15_reg_217 <= numberOfPoints;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_1_reg_272 <= tmp_1_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_2_reg_277 <= grp_fu_170_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        tmp_3_reg_282 <= grp_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_8_reg_262 <= grp_fu_201_p2;
        tmp_s_reg_267 <= grp_fu_205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n))))) begin
        tmp_reg_213 <= ready;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == tmp_reg_213) & ~(((1'b0 == x1_empty_n) & (1'b1 == ap_predicate_op115_read_state3)) | ((1'b0 == y2_empty_n) & (1'b1 == ap_predicate_op115_read_state3))) & (tmp_4_fu_178_p2 == 1'd0))) begin
        outputDist_ap_vld = 1'b1;
    end else begin
        outputDist_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (1'd1 == tmp_reg_213) & (1'd1 == tmp_4_fu_178_p2)))) begin
        x1_blk_n = x1_empty_n;
    end else begin
        x1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n)))) | ((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_predicate_op115_read_state3) & ~(((1'b0 == x1_empty_n) & (1'b1 == ap_predicate_op115_read_state3)) | ((1'b0 == y2_empty_n) & (1'b1 == ap_predicate_op115_read_state3)))))) begin
        x1_read = 1'b1;
    end else begin
        x1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (1'd1 == tmp_reg_213) & (1'd1 == tmp_4_fu_178_p2)))) begin
        y2_blk_n = y2_empty_n;
    end else begin
        y2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_88_p2 == 1'd1) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n)))) | ((1'b1 == ap_CS_fsm_state3) & (1'b1 == ap_predicate_op115_read_state3) & ~(((1'b0 == x1_empty_n) & (1'b1 == ap_predicate_op115_read_state3)) | ((1'b0 == y2_empty_n) & (1'b1 == ap_predicate_op115_read_state3)))))) begin
        y2_read = 1'b1;
    end else begin
        y2_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ~(((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ~(((1'b0 == x1_empty_n) & (1'b1 == ap_predicate_op115_read_state3)) | ((1'b0 == y2_empty_n) & (1'b1 == ap_predicate_op115_read_state3))) & ((tmp_4_fu_178_p2 == 1'd0) | (tmp_reg_213 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == tmp_reg_213) & (1'd1 == tmp_4_fu_178_p2) & ~(((1'b0 == x1_empty_n) & (1'b1 == ap_predicate_op115_read_state3)) | ((1'b0 == y2_empty_n) & (1'b1 == ap_predicate_op115_read_state3))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

always @ (*) begin
    ap_block_state2 = (((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == x1_empty_n)) | ((tmp_read_fu_88_p2 == 1'd1) & (1'b0 == y2_empty_n)));
end

always @ (*) begin
    ap_block_state3 = (((1'b0 == x1_empty_n) & (1'b1 == ap_predicate_op115_read_state3)) | ((1'b0 == y2_empty_n) & (1'b1 == ap_predicate_op115_read_state3)));
end

always @ (*) begin
    ap_predicate_op115_read_state3 = ((1'd1 == tmp_reg_213) & (1'd1 == tmp_4_fu_178_p2));
end

assign i_1_fu_195_p2 = (i_reg_149 + 32'd1);

assign outputDist = v_fu_160_p1;

assign tmp_1_fu_209_p2 = (tmp_s_reg_267 + tmp_8_reg_262);

assign tmp_4_fu_178_p2 = ((i_reg_149 < tmp_15_reg_217) ? 1'b1 : 1'b0);

assign tmp_7_fu_183_p2 = (x1_dout - x_reg_131);

assign tmp_9_fu_189_p2 = (y2_dout - y_reg_140);

assign tmp_read_fu_88_p2 = ready;

endmodule //DistCalc_DistCalcThread
