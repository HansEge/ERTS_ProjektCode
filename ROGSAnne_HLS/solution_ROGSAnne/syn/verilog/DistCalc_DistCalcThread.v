// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DistCalc_DistCalcThread (
        ap_clk,
        ap_rst,
        busy,
        busy_ap_vld,
        numberOfPoints,
        ready,
        x_dout,
        x_empty_n,
        x_read,
        y_dout,
        y_empty_n,
        y_read,
        outputDist,
        outputDist_ap_vld
);

parameter    ap_ST_fsm_state2 = 143'd2;
parameter    ap_ST_fsm_state3 = 143'd4;
parameter    ap_ST_fsm_state4 = 143'd8;
parameter    ap_ST_fsm_state5 = 143'd16;
parameter    ap_ST_fsm_state6 = 143'd32;
parameter    ap_ST_fsm_state7 = 143'd64;
parameter    ap_ST_fsm_state8 = 143'd128;
parameter    ap_ST_fsm_state9 = 143'd256;
parameter    ap_ST_fsm_state10 = 143'd512;
parameter    ap_ST_fsm_state11 = 143'd1024;
parameter    ap_ST_fsm_state12 = 143'd2048;
parameter    ap_ST_fsm_state13 = 143'd4096;
parameter    ap_ST_fsm_state14 = 143'd8192;
parameter    ap_ST_fsm_state15 = 143'd16384;
parameter    ap_ST_fsm_state16 = 143'd32768;
parameter    ap_ST_fsm_state17 = 143'd65536;
parameter    ap_ST_fsm_state18 = 143'd131072;
parameter    ap_ST_fsm_state19 = 143'd262144;
parameter    ap_ST_fsm_state20 = 143'd524288;
parameter    ap_ST_fsm_state21 = 143'd1048576;
parameter    ap_ST_fsm_state22 = 143'd2097152;
parameter    ap_ST_fsm_state23 = 143'd4194304;
parameter    ap_ST_fsm_state24 = 143'd8388608;
parameter    ap_ST_fsm_state25 = 143'd16777216;
parameter    ap_ST_fsm_state26 = 143'd33554432;
parameter    ap_ST_fsm_state27 = 143'd67108864;
parameter    ap_ST_fsm_state28 = 143'd134217728;
parameter    ap_ST_fsm_state29 = 143'd268435456;
parameter    ap_ST_fsm_state30 = 143'd536870912;
parameter    ap_ST_fsm_state31 = 143'd1073741824;
parameter    ap_ST_fsm_state32 = 143'd2147483648;
parameter    ap_ST_fsm_state33 = 143'd4294967296;
parameter    ap_ST_fsm_state34 = 143'd8589934592;
parameter    ap_ST_fsm_state35 = 143'd17179869184;
parameter    ap_ST_fsm_state36 = 143'd34359738368;
parameter    ap_ST_fsm_state37 = 143'd68719476736;
parameter    ap_ST_fsm_state38 = 143'd137438953472;
parameter    ap_ST_fsm_state39 = 143'd274877906944;
parameter    ap_ST_fsm_state40 = 143'd549755813888;
parameter    ap_ST_fsm_state41 = 143'd1099511627776;
parameter    ap_ST_fsm_state42 = 143'd2199023255552;
parameter    ap_ST_fsm_state43 = 143'd4398046511104;
parameter    ap_ST_fsm_state44 = 143'd8796093022208;
parameter    ap_ST_fsm_state45 = 143'd17592186044416;
parameter    ap_ST_fsm_state46 = 143'd35184372088832;
parameter    ap_ST_fsm_state47 = 143'd70368744177664;
parameter    ap_ST_fsm_state48 = 143'd140737488355328;
parameter    ap_ST_fsm_state49 = 143'd281474976710656;
parameter    ap_ST_fsm_state50 = 143'd562949953421312;
parameter    ap_ST_fsm_state51 = 143'd1125899906842624;
parameter    ap_ST_fsm_state52 = 143'd2251799813685248;
parameter    ap_ST_fsm_state53 = 143'd4503599627370496;
parameter    ap_ST_fsm_state54 = 143'd9007199254740992;
parameter    ap_ST_fsm_state55 = 143'd18014398509481984;
parameter    ap_ST_fsm_state56 = 143'd36028797018963968;
parameter    ap_ST_fsm_state57 = 143'd72057594037927936;
parameter    ap_ST_fsm_state58 = 143'd144115188075855872;
parameter    ap_ST_fsm_state59 = 143'd288230376151711744;
parameter    ap_ST_fsm_state60 = 143'd576460752303423488;
parameter    ap_ST_fsm_state61 = 143'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 143'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 143'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 143'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 143'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 143'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 143'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 143'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 143'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 143'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 143'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 143'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 143'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 143'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 143'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 143'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 143'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 143'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 143'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 143'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 143'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 143'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 143'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 143'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 143'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 143'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 143'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 143'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 143'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 143'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 143'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 143'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 143'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 143'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 143'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 143'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 143'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 143'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 143'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 143'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 143'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 143'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 143'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 143'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 143'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 143'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 143'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 143'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 143'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 143'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 143'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 143'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 143'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 143'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 143'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 143'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 143'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 143'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 143'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 143'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 143'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 143'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 143'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 143'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 143'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 143'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 143'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 143'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 143'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 143'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 143'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 143'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 143'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 143'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 143'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 143'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 143'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 143'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 143'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 143'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 143'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 143'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 143'd5575186299632655785383929568162090376495104;

input   ap_clk;
input   ap_rst;
output   busy;
output   busy_ap_vld;
input  [31:0] numberOfPoints;
input   ready;
input  [31:0] x_dout;
input   x_empty_n;
output   x_read;
input  [31:0] y_dout;
input   y_empty_n;
output   y_read;
output  [31:0] outputDist;
output   outputDist_ap_vld;

reg busy;
reg busy_ap_vld;
reg x_read;
reg y_read;
reg outputDist_ap_vld;

reg    x_blk_n;
(* fsm_encoding = "none" *) reg   [142:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_read_fu_124_p2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
reg    y_blk_n;
reg   [31:0] reg_172;
reg    ap_block_state2;
reg    ap_block_state3;
reg    ap_block_state4;
reg    ap_block_state13;
reg    ap_block_state22;
reg    ap_block_state31;
reg    ap_block_state40;
reg    ap_block_state49;
reg    ap_block_state58;
reg   [31:0] reg_176;
wire   [63:0] grp_fu_164_p1;
reg   [63:0] reg_180;
wire    ap_CS_fsm_state12;
reg   [0:0] icmp_reg_427;
wire    ap_CS_fsm_state76;
reg   [0:0] tmp_8_8_reg_467;
wire   [63:0] grp_fu_167_p2;
reg   [63:0] reg_185;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
reg   [0:0] tmp_8_1_reg_432;
wire    ap_CS_fsm_state79;
reg   [0:0] icmp3_reg_437;
wire    ap_CS_fsm_state88;
reg   [0:0] tmp_8_3_reg_442;
wire    ap_CS_fsm_state97;
reg   [0:0] tmp_8_4_reg_447;
wire    ap_CS_fsm_state106;
reg   [0:0] tmp_8_5_reg_452;
wire    ap_CS_fsm_state115;
reg   [0:0] icmp6_reg_457;
wire    ap_CS_fsm_state124;
reg   [0:0] tmp_8_7_reg_462;
wire    ap_CS_fsm_state133;
wire   [63:0] grp_fu_160_p2;
reg   [63:0] reg_190;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state132;
wire    ap_CS_fsm_state141;
wire  signed [31:0] grp_fu_194_p2;
reg  signed [31:0] reg_206;
wire  signed [31:0] grp_fu_200_p2;
reg  signed [31:0] reg_210;
reg  signed [31:0] reg_214;
reg    ap_block_state59;
reg  signed [31:0] reg_218;
wire   [31:0] grp_fu_222_p2;
reg   [31:0] reg_246;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state60;
wire   [31:0] grp_fu_228_p2;
reg   [31:0] reg_250;
wire   [31:0] grp_fu_234_p2;
reg   [31:0] reg_254;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state61;
wire   [31:0] grp_fu_240_p2;
reg   [31:0] reg_258;
wire   [31:0] grp_fu_262_p2;
reg   [31:0] reg_274;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state52;
wire   [31:0] grp_fu_268_p2;
reg   [31:0] reg_279;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state62;
reg   [0:0] tmp_reg_423;
wire   [0:0] icmp_fu_294_p2;
wire   [0:0] tmp_8_1_fu_300_p2;
wire   [0:0] icmp3_fu_316_p2;
wire   [0:0] tmp_8_3_fu_322_p2;
wire   [0:0] tmp_8_4_fu_328_p2;
wire   [0:0] tmp_8_5_fu_334_p2;
wire   [0:0] icmp6_fu_350_p2;
wire   [0:0] tmp_8_7_fu_356_p2;
wire   [0:0] tmp_8_8_fu_362_p2;
reg   [63:0] tmp_6_1_reg_472;
reg   [63:0] tmp_6_2_reg_477;
reg   [63:0] tmp_6_3_reg_482;
reg   [63:0] tmp_6_4_reg_487;
reg   [63:0] tmp_6_5_reg_492;
reg   [63:0] tmp_6_6_reg_497;
reg   [63:0] tmp_6_7_reg_502;
wire    ap_CS_fsm_state67;
wire   [63:0] totalDist_1_fu_368_p3;
reg   [63:0] totalDist_1_reg_507;
wire   [63:0] totalDist_1_1_fu_375_p3;
reg   [63:0] totalDist_1_1_reg_513;
wire   [63:0] totalDist_1_2_fu_381_p3;
reg   [63:0] totalDist_1_2_reg_519;
wire   [63:0] totalDist_1_3_fu_387_p3;
reg   [63:0] totalDist_1_3_reg_525;
wire   [63:0] totalDist_1_4_fu_393_p3;
reg   [63:0] totalDist_1_4_reg_531;
wire   [63:0] totalDist_1_5_fu_399_p3;
reg   [63:0] totalDist_1_5_reg_537;
wire   [63:0] totalDist_1_6_fu_405_p3;
reg   [63:0] totalDist_1_6_reg_543;
wire   [63:0] totalDist_1_7_fu_411_p3;
reg   [63:0] totalDist_1_7_reg_549;
wire   [63:0] totalDist_1_8_fu_417_p3;
reg   [63:0] totalDist_1_8_reg_555;
wire    ap_CS_fsm_state142;
wire    ap_CS_fsm_state143;
wire   [31:0] v_fu_156_p1;
reg   [63:0] grp_fu_160_p0;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state116;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state134;
reg   [31:0] grp_fu_164_p0;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state53;
reg   [63:0] grp_fu_167_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state77;
wire   [30:0] tmp_11_fu_284_p4;
wire   [29:0] tmp_12_fu_306_p4;
wire   [28:0] tmp_13_fu_340_p4;
reg    grp_fu_164_ce;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state75;
reg    grp_fu_167_ce;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state110;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state122;
wire    ap_CS_fsm_state126;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state129;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state131;
reg    grp_fu_222_ce;
reg    grp_fu_228_ce;
reg   [142:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 143'd2;
end

DistCalc_fptrunc_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
DistCalc_fptrunc_bkb_U0(
    .din0(totalDist_1_8_reg_555),
    .dout(v_fu_156_p1)
);

DistCalc_dadd_64ncud #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
DistCalc_dadd_64ncud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_160_p0),
    .din1(reg_185),
    .ce(1'b1),
    .dout(grp_fu_160_p2)
);

DistCalc_sitodp_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
DistCalc_sitodp_3dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_164_p0),
    .ce(grp_fu_164_ce),
    .dout(grp_fu_164_p1)
);

DistCalc_dsqrt_64eOg #(
    .ID( 1 ),
    .NUM_STAGE( 57 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
DistCalc_dsqrt_64eOg_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(grp_fu_167_p1),
    .ce(grp_fu_167_ce),
    .dout(grp_fu_167_p2)
);

DistCalc_mul_32s_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DistCalc_mul_32s_fYi_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_206),
    .din1(reg_206),
    .ce(grp_fu_222_ce),
    .dout(grp_fu_222_p2)
);

DistCalc_mul_32s_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DistCalc_mul_32s_fYi_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_210),
    .din1(reg_210),
    .ce(grp_fu_228_ce),
    .dout(grp_fu_228_p2)
);

DistCalc_mul_32s_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DistCalc_mul_32s_fYi_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_214),
    .din1(reg_214),
    .ce(1'b1),
    .dout(grp_fu_234_p2)
);

DistCalc_mul_32s_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
DistCalc_mul_32s_fYi_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_218),
    .din1(reg_218),
    .ce(1'b1),
    .dout(grp_fu_240_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b0) begin
        ap_CS_fsm <= ap_ST_fsm_state2;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
        icmp3_reg_437 <= icmp3_fu_316_p2;
        icmp6_reg_457 <= icmp6_fu_350_p2;
        icmp_reg_427 <= icmp_fu_294_p2;
        tmp_8_1_reg_432 <= tmp_8_1_fu_300_p2;
        tmp_8_3_reg_442 <= tmp_8_3_fu_322_p2;
        tmp_8_4_reg_447 <= tmp_8_4_fu_328_p2;
        tmp_8_5_reg_452 <= tmp_8_5_fu_334_p2;
        tmp_8_7_reg_462 <= tmp_8_7_fu_356_p2;
        tmp_8_8_reg_467 <= tmp_8_8_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_124_p2 == 1'd1) & ~(((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == x_empty_n)) | ((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == y_empty_n)))) | ((1'b1 == ap_CS_fsm_state3) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state13) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state31) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state40) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state58) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))))) begin
        reg_172 <= x_dout;
        reg_176 <= y_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (1'd1 == icmp_reg_427)) | ((1'b1 == ap_CS_fsm_state76) & (1'd1 == tmp_8_8_reg_467)))) begin
        reg_180 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == icmp_reg_427) & (1'b1 == ap_CS_fsm_state69)) | ((1'b1 == ap_CS_fsm_state70) & (1'd1 == tmp_8_1_reg_432)) | ((1'b1 == ap_CS_fsm_state79) & (1'd1 == icmp3_reg_437)) | ((1'b1 == ap_CS_fsm_state88) & (1'd1 == tmp_8_3_reg_442)) | ((1'b1 == ap_CS_fsm_state97) & (1'd1 == tmp_8_4_reg_447)) | ((1'b1 == ap_CS_fsm_state106) & (1'd1 == tmp_8_5_reg_452)) | ((1'b1 == ap_CS_fsm_state115) & (1'd1 == icmp6_reg_457)) | ((1'b1 == ap_CS_fsm_state124) & (1'd1 == tmp_8_7_reg_462)) | ((1'd1 == tmp_8_8_reg_467) & (1'b1 == ap_CS_fsm_state133)))) begin
        reg_185 <= grp_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == tmp_8_1_reg_432) & (1'b1 == ap_CS_fsm_state78)) | ((1'd1 == icmp3_reg_437) & (1'b1 == ap_CS_fsm_state87)) | ((1'd1 == tmp_8_3_reg_442) & (1'b1 == ap_CS_fsm_state96)) | ((1'd1 == tmp_8_4_reg_447) & (1'b1 == ap_CS_fsm_state105)) | ((1'd1 == tmp_8_5_reg_452) & (1'b1 == ap_CS_fsm_state114)) | ((1'd1 == icmp6_reg_457) & (1'b1 == ap_CS_fsm_state123)) | ((1'd1 == tmp_8_7_reg_462) & (1'b1 == ap_CS_fsm_state132)) | ((1'd1 == tmp_8_8_reg_467) & (1'b1 == ap_CS_fsm_state141)))) begin
        reg_190 <= grp_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state13) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == icmp3_reg_437)) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_3_reg_442)) | ((1'b1 == ap_CS_fsm_state31) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_4_reg_447)) | ((1'b1 == ap_CS_fsm_state40) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_5_reg_452)) | ((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == icmp6_reg_457)) | ((1'b1 == ap_CS_fsm_state58) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_7_reg_462)))) begin
        reg_206 <= grp_fu_194_p2;
        reg_210 <= grp_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_1_reg_432)) | ((1'b1 == ap_CS_fsm_state59) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_8_reg_467)))) begin
        reg_214 <= grp_fu_194_p2;
        reg_218 <= grp_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == icmp_reg_427) & (1'b1 == ap_CS_fsm_state5)) | ((1'd1 == icmp3_reg_437) & (1'b1 == ap_CS_fsm_state15)) | ((1'd1 == tmp_8_3_reg_442) & (1'b1 == ap_CS_fsm_state24)) | ((1'd1 == tmp_8_4_reg_447) & (1'b1 == ap_CS_fsm_state33)) | ((1'd1 == tmp_8_5_reg_452) & (1'b1 == ap_CS_fsm_state42)) | ((1'd1 == icmp6_reg_457) & (1'b1 == ap_CS_fsm_state51)) | ((1'd1 == tmp_8_7_reg_462) & (1'b1 == ap_CS_fsm_state60)))) begin
        reg_246 <= grp_fu_222_p2;
        reg_250 <= grp_fu_228_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == tmp_8_1_reg_432) & (1'b1 == ap_CS_fsm_state6)) | ((1'd1 == tmp_8_8_reg_467) & (1'b1 == ap_CS_fsm_state61)))) begin
        reg_254 <= grp_fu_234_p2;
        reg_258 <= grp_fu_240_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == icmp_reg_427) & (1'b1 == ap_CS_fsm_state6)) | ((1'd1 == icmp3_reg_437) & (1'b1 == ap_CS_fsm_state16)) | ((1'd1 == tmp_8_3_reg_442) & (1'b1 == ap_CS_fsm_state25)) | ((1'd1 == tmp_8_4_reg_447) & (1'b1 == ap_CS_fsm_state34)) | ((1'd1 == tmp_8_5_reg_452) & (1'b1 == ap_CS_fsm_state43)) | ((1'd1 == icmp6_reg_457) & (1'b1 == ap_CS_fsm_state52)) | ((1'd1 == tmp_8_7_reg_462) & (1'b1 == ap_CS_fsm_state61)))) begin
        reg_274 <= grp_fu_262_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == tmp_8_1_reg_432) & (1'b1 == ap_CS_fsm_state7)) | ((1'd1 == tmp_8_8_reg_467) & (1'b1 == ap_CS_fsm_state62)))) begin
        reg_279 <= grp_fu_268_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_1_reg_432))) begin
        tmp_6_1_reg_472 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == icmp3_reg_437))) begin
        tmp_6_2_reg_477 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_3_reg_442))) begin
        tmp_6_3_reg_482 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_4_reg_447))) begin
        tmp_6_4_reg_487 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == tmp_8_5_reg_452))) begin
        tmp_6_5_reg_492 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)) & (1'd1 == icmp6_reg_457))) begin
        tmp_6_6_reg_497 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == tmp_8_7_reg_462) & (1'b1 == ap_CS_fsm_state67))) begin
        tmp_6_7_reg_502 <= grp_fu_164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == x_empty_n)) | ((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == y_empty_n))))) begin
        tmp_reg_423 <= ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        totalDist_1_1_reg_513 <= totalDist_1_1_fu_375_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        totalDist_1_2_reg_519 <= totalDist_1_2_fu_381_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        totalDist_1_3_reg_525 <= totalDist_1_3_fu_387_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        totalDist_1_4_reg_531 <= totalDist_1_4_fu_393_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        totalDist_1_5_reg_537 <= totalDist_1_5_fu_399_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state124)) begin
        totalDist_1_6_reg_543 <= totalDist_1_6_fu_405_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state133)) begin
        totalDist_1_7_reg_549 <= totalDist_1_7_fu_411_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        totalDist_1_8_reg_555 <= totalDist_1_8_fu_417_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        totalDist_1_reg_507 <= totalDist_1_fu_368_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) & (1'd1 == tmp_reg_423))) begin
        busy = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state142)) begin
        busy = 1'd1;
    end else begin
        busy = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state142) | ((1'b1 == ap_CS_fsm_state143) & (1'd1 == tmp_reg_423)))) begin
        busy_ap_vld = 1'b1;
    end else begin
        busy_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state134)) begin
        grp_fu_160_p0 = totalDist_1_7_reg_549;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_160_p0 = totalDist_1_6_reg_543;
    end else if ((1'b1 == ap_CS_fsm_state116)) begin
        grp_fu_160_p0 = totalDist_1_5_reg_537;
    end else if ((1'b1 == ap_CS_fsm_state107)) begin
        grp_fu_160_p0 = totalDist_1_4_reg_531;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        grp_fu_160_p0 = totalDist_1_3_reg_525;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_160_p0 = totalDist_1_2_reg_519;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_160_p0 = totalDist_1_1_reg_513;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        grp_fu_160_p0 = totalDist_1_reg_507;
    end else begin
        grp_fu_160_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state31) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state40) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state58) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75))) begin
        grp_fu_164_ce = 1'b1;
    end else begin
        grp_fu_164_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_164_p0 = reg_279;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_fu_164_p0 = reg_274;
    end else begin
        grp_fu_164_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state31) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state40) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state58) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state132) | ((1'b1 == ap_CS_fsm_state59) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state110) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state126) | (1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state131))) begin
        grp_fu_167_ce = 1'b1;
    end else begin
        grp_fu_167_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        grp_fu_167_p1 = tmp_6_7_reg_502;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_167_p1 = tmp_6_6_reg_497;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_167_p1 = tmp_6_5_reg_492;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_167_p1 = tmp_6_4_reg_487;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_167_p1 = tmp_6_3_reg_482;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_167_p1 = tmp_6_2_reg_477;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_167_p1 = tmp_6_1_reg_472;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state77))) begin
        grp_fu_167_p1 = reg_180;
    end else begin
        grp_fu_167_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state59) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_222_ce = 1'b1;
    end else begin
        grp_fu_222_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state59) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_228_ce = 1'b1;
    end else begin
        grp_fu_228_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state143) & (1'd1 == tmp_reg_423))) begin
        outputDist_ap_vld = 1'b1;
    end else begin
        outputDist_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_124_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state59))) begin
        x_blk_n = x_empty_n;
    end else begin
        x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_124_p2 == 1'd1) & ~(((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == x_empty_n)) | ((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == y_empty_n)))) | ((1'b1 == ap_CS_fsm_state3) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state13) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state31) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state40) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state58) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state59) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))))) begin
        x_read = 1'b1;
    end else begin
        x_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_124_p2 == 1'd1)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state59))) begin
        y_blk_n = y_empty_n;
    end else begin
        y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_124_p2 == 1'd1) & ~(((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == x_empty_n)) | ((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == y_empty_n)))) | ((1'b1 == ap_CS_fsm_state3) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state13) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state31) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state40) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state58) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))) | ((1'b1 == ap_CS_fsm_state59) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n))))) begin
        y_read = 1'b1;
    end else begin
        y_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ~(((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == x_empty_n)) | ((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == y_empty_n))) & (tmp_read_fu_124_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state143;
            end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_read_fu_124_p2 == 1'd1) & ~(((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == x_empty_n)) | ((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == y_empty_n))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & ~((1'b0 == x_empty_n) | (1'b0 == y_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state13 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

always @ (*) begin
    ap_block_state2 = (((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == x_empty_n)) | ((tmp_read_fu_124_p2 == 1'd1) & (1'b0 == y_empty_n)));
end

always @ (*) begin
    ap_block_state22 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

always @ (*) begin
    ap_block_state3 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

always @ (*) begin
    ap_block_state31 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

always @ (*) begin
    ap_block_state4 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

always @ (*) begin
    ap_block_state40 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

always @ (*) begin
    ap_block_state49 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

always @ (*) begin
    ap_block_state58 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

always @ (*) begin
    ap_block_state59 = ((1'b0 == x_empty_n) | (1'b0 == y_empty_n));
end

assign grp_fu_194_p2 = (x_dout - reg_172);

assign grp_fu_200_p2 = (y_dout - reg_176);

assign grp_fu_262_p2 = (reg_250 + reg_246);

assign grp_fu_268_p2 = (reg_258 + reg_254);

assign icmp3_fu_316_p2 = ((tmp_12_fu_306_p4 != 30'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_350_p2 = ((tmp_13_fu_340_p4 != 29'd0) ? 1'b1 : 1'b0);

assign icmp_fu_294_p2 = ((tmp_11_fu_284_p4 != 31'd0) ? 1'b1 : 1'b0);

assign outputDist = v_fu_156_p1;

assign tmp_11_fu_284_p4 = {{numberOfPoints[31:1]}};

assign tmp_12_fu_306_p4 = {{numberOfPoints[31:2]}};

assign tmp_13_fu_340_p4 = {{numberOfPoints[31:3]}};

assign tmp_8_1_fu_300_p2 = ((numberOfPoints > 32'd2) ? 1'b1 : 1'b0);

assign tmp_8_3_fu_322_p2 = ((numberOfPoints > 32'd4) ? 1'b1 : 1'b0);

assign tmp_8_4_fu_328_p2 = ((numberOfPoints > 32'd5) ? 1'b1 : 1'b0);

assign tmp_8_5_fu_334_p2 = ((numberOfPoints > 32'd6) ? 1'b1 : 1'b0);

assign tmp_8_7_fu_356_p2 = ((numberOfPoints > 32'd8) ? 1'b1 : 1'b0);

assign tmp_8_8_fu_362_p2 = ((numberOfPoints > 32'd9) ? 1'b1 : 1'b0);

assign tmp_read_fu_124_p2 = ready;

assign totalDist_1_1_fu_375_p3 = ((tmp_8_1_reg_432[0:0] === 1'b1) ? reg_190 : totalDist_1_reg_507);

assign totalDist_1_2_fu_381_p3 = ((icmp3_reg_437[0:0] === 1'b1) ? reg_190 : totalDist_1_1_reg_513);

assign totalDist_1_3_fu_387_p3 = ((tmp_8_3_reg_442[0:0] === 1'b1) ? reg_190 : totalDist_1_2_reg_519);

assign totalDist_1_4_fu_393_p3 = ((tmp_8_4_reg_447[0:0] === 1'b1) ? reg_190 : totalDist_1_3_reg_525);

assign totalDist_1_5_fu_399_p3 = ((tmp_8_5_reg_452[0:0] === 1'b1) ? reg_190 : totalDist_1_4_reg_531);

assign totalDist_1_6_fu_405_p3 = ((icmp6_reg_457[0:0] === 1'b1) ? reg_190 : totalDist_1_5_reg_537);

assign totalDist_1_7_fu_411_p3 = ((tmp_8_7_reg_462[0:0] === 1'b1) ? reg_190 : totalDist_1_6_reg_543);

assign totalDist_1_8_fu_417_p3 = ((tmp_8_8_reg_467[0:0] === 1'b1) ? reg_190 : totalDist_1_7_reg_549);

assign totalDist_1_fu_368_p3 = ((icmp_reg_427[0:0] === 1'b1) ? reg_185 : 64'd0);

endmodule //DistCalc_DistCalcThread
